<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wGBau8Z3LRzXAAAAABJRU5ErkJggg==
</value>
  </data>
</root>